package ssh

import (
	"fmt"
	"os"
	"path/filepath"
	"time"

	"github.com/residwi/sshman/utils"
)

type ConfigEntry struct {
	Host         string
	User         string
	Hostname     string
	IdentityFile string
}

func AddToConfig(sshPath string, entry ConfigEntry) error {
	configFilePath := filepath.Join(sshPath, "config")

	if utils.IsFileNotExist(configFilePath) {
		if err := os.WriteFile(configFilePath, []byte{}, 0600); err != nil {
			return fmt.Errorf("failed to create SSH config file: %w", err)
		}
	}

	file, err := os.OpenFile(configFilePath, os.O_APPEND|os.O_WRONLY, 0600)
	if err != nil {
		return fmt.Errorf("failed to open SSH config file: %w", err)
	}
	defer file.Close()

	configText := fmt.Sprintf("\n# Generated by sshman - %s\n", time.Now().Format("2006-01-02 15:04:05"))
	configText += fmt.Sprintf("Host %s\n", entry.Host)
	configText += fmt.Sprintf("\tUser %s\n", entry.User)
	configText += fmt.Sprintf("\tHostName %s\n", entry.Hostname)
	configText += "\tPreferredAuthentications publickey\n"
	configText += fmt.Sprintf("\tIdentityFile %s\n", entry.IdentityFile)

	if _, err := file.WriteString(configText); err != nil {
		return fmt.Errorf("failed to write to SSH config file: %w", err)
	}

	return nil
}
